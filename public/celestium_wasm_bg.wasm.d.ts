/* tslint:disable */
/* eslint-disable */
export function __wbg_wasmwallet_free(a: number): void;
export function wasmwallet_new(a: number, b: number, c: number, d: number): number;
export function wasmwallet_create_and_mine_string_nft(a: number, b: number): number;
export function __wbg_renderingscene_free(a: number): void;
export function renderingscene_promise(a: number): number;
export function renderingscene_imageSoFar(a: number): number;
export function __wbg_workerpool_free(a: number): void;
export function workerpool_new(a: number): number;
export function child_entry_point(a: number): void;
export function rustsecp256k1_v0_2_0_context_preallocated_destroy(a: number): void;
export function rustsecp256k1_v0_2_0_ecdsa_sign(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function rustsecp256k1_v0_2_0_ec_pubkey_parse(a: number, b: number, c: number, d: number): number;
export function rustsecp256k1_v0_2_0_ec_pubkey_serialize(a: number, b: number, c: number, d: number, e: number): number;
export function rustsecp256k1_v0_2_0_ec_seckey_verify(a: number, b: number): number;
export function rustsecp256k1_v0_2_0_ec_pubkey_create(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_ecdsa_verify(a: number, b: number, c: number, d: number): number;
export function rustsecp256k1_v0_2_0_ecdsa_signature_serialize_compact(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_context_preallocated_size(a: number): number;
export function rustsecp256k1_v0_2_0_context_preallocated_create(a: number, b: number): number;
export function rustsecp256k1_v0_2_0_ecdsa_signature_serialize_der(a: number, b: number, c: number, d: number): number;
export function rustsecp256k1_v0_2_0_ecdsa_signature_parse_der(a: number, b: number, c: number, d: number): number;
export function rustsecp256k1_v0_2_0_ecdsa_signature_parse_compact(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_ecdsa_signature_normalize(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_ec_pubkey_combine(a: number, b: number, c: number, d: number): number;
export function rustsecp256k1_v0_2_0_context_create(a: number): number;
export function rustsecp256k1_v0_2_0_context_destroy(a: number): void;
export function rustsecp256k1_v0_2_0_default_illegal_callback_fn(a: number, b: number): void;
export function rustsecp256k1_v0_2_0_default_error_callback_fn(a: number, b: number): void;
export function rustsecp256k1_v0_2_0_context_preallocated_clone_size(a: number): number;
export function rustsecp256k1_v0_2_0_context_preallocated_clone(a: number, b: number): number;
export function rustsecp256k1_v0_2_0_context_set_illegal_callback(a: number, b: number, c: number): void;
export function rustsecp256k1_v0_2_0_context_set_error_callback(a: number, b: number, c: number): void;
export function rustsecp256k1_v0_2_0_ec_seckey_negate(a: number, b: number): number;
export function rustsecp256k1_v0_2_0_ec_privkey_negate(a: number, b: number): number;
export function rustsecp256k1_v0_2_0_ec_pubkey_negate(a: number, b: number): number;
export function rustsecp256k1_v0_2_0_ec_seckey_tweak_add(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_ec_privkey_tweak_add(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_ec_pubkey_tweak_add(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_ec_seckey_tweak_mul(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_ec_privkey_tweak_mul(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_ec_pubkey_tweak_mul(a: number, b: number, c: number): number;
export function rustsecp256k1_v0_2_0_context_randomize(a: number, b: number): number;
export function rustsecp256k1_v0_2_0_ecdh(a: number, b: number, c: number, d: number, e: number, f: number): number;
export const __wbindgen_export_0: WebAssembly.Memory;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_3: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h2d327cbcae3cb383(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_start(): void;
