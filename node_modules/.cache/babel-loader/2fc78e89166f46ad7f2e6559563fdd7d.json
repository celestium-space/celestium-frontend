{"ast":null,"code":"import{useEffect}from'react';import logo from\"./logo.svg\";import\"./App.css\";// var celestiump2p = require('celestiump2p');\nimport*as celestiumClient from'celestiump2p';import{io}from'socket.io-client';var js=import(\"../node_modules/rusty-web/rusty_web.js\");function App(){console.log(wallet);useEffect(function(){var state={meta_data:{block_chain_len:0},block_chain:null};celestiumClient.RTCPeerConnection=RTCPeerConnection;celestiumClient.RTCSessionDescription=RTCSessionDescription;celestiumClient.RTCIceCandidate=RTCIceCandidate;celestiumClient.io=io;var c1=celestiumClient.initNewClient();c1.gotConnection=function(){c1.sendOffer(state.meta_data);};c1.gotOffer=function(other_meta_data){console.log(\"recived meta data on offer\",other_meta_data);return state.meta_data;};c1.gotAnswer=function(other_meta_data){console.log(\"recived meta data on answer\",other_meta_data);return state.meta_data;};c1.gotCandidate=function(other_meta_data){console.log(\"recived meta data on candidate\",other_meta_data);return state.meta_data;};c1.gotDataChannel=function(){c1.send(\"ping\");};c1.gotData=function(data){console.log(data);if(data===\"ping\"){c1.send(\"pong\");}else{c1.send(\"ping\");}};c1.channelClosed=function(){console.log(\"channel closed\");c1=null;};},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"}),/*#__PURE__*/React.createElement(\"p\",null,\"Edit \",/*#__PURE__*/React.createElement(\"code\",null,\"src/App.js\"),\" and save to reload.\"),/*#__PURE__*/React.createElement(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Learn React\")));}export default App;","map":{"version":3,"sources":["/home/zander/Projects/artificialMind/celestium/celestium_frontend/src/App.js"],"names":["useEffect","celestiumClient","io","js","App","console","log","wallet","state","meta_data","block_chain_len","block_chain","RTCPeerConnection","RTCSessionDescription","RTCIceCandidate","c1","initNewClient","gotConnection","sendOffer","gotOffer","other_meta_data","gotAnswer","gotCandidate","gotDataChannel","send","gotData","data","channelClosed","logo"],"mappings":"AAAA,OAAQA,SAAR,KAAwB,OAAxB,C,6BAEA,MAAO,WAAP,CACA;AACA,MAAO,GAAKC,CAAAA,eAAZ,KAAiC,cAAjC,CACA,OAASC,EAAT,KAAmB,kBAAnB,CAEA,GAAMC,CAAAA,EAAE,CAAG,OAAO,wCAAP,CAAX,CAEA,QAASC,CAAAA,GAAT,EAAe,CACbC,OAAO,CAACC,GAAR,CAAYC,MAAZ,EACAP,SAAS,CAAC,UAAM,CACd,GAAIQ,CAAAA,KAAK,CAAG,CACVC,SAAS,CAAE,CACTC,eAAe,CAAE,CADR,CADD,CAIVC,WAAW,CAAE,IAJH,CAAZ,CAOAV,eAAe,CAACW,iBAAhB,CAAoCA,iBAApC,CACAX,eAAe,CAACY,qBAAhB,CAAwCA,qBAAxC,CACAZ,eAAe,CAACa,eAAhB,CAAkCA,eAAlC,CACAb,eAAe,CAACC,EAAhB,CAAqBA,EAArB,CAEA,GAAIa,CAAAA,EAAE,CAAGd,eAAe,CAACe,aAAhB,EAAT,CACAD,EAAE,CAACE,aAAH,CAAmB,UAAM,CACvBF,EAAE,CAACG,SAAH,CAAaV,KAAK,CAACC,SAAnB,EACD,CAFD,CAGAM,EAAE,CAACI,QAAH,CAAc,SAACC,eAAD,CAAqB,CACjCf,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0Cc,eAA1C,EACA,MAAOZ,CAAAA,KAAK,CAACC,SAAb,CACD,CAHD,CAIAM,EAAE,CAACM,SAAH,CAAe,SAACD,eAAD,CAAqB,CAClCf,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAA2Cc,eAA3C,EACA,MAAOZ,CAAAA,KAAK,CAACC,SAAb,CACD,CAHD,CAIAM,EAAE,CAACO,YAAH,CAAkB,SAACF,eAAD,CAAqB,CACrCf,OAAO,CAACC,GAAR,CAAY,gCAAZ,CAA8Cc,eAA9C,EACA,MAAOZ,CAAAA,KAAK,CAACC,SAAb,CACD,CAHD,CAIAM,EAAE,CAACQ,cAAH,CAAoB,UAAM,CACxBR,EAAE,CAACS,IAAH,CAAQ,MAAR,EACD,CAFD,CAGAT,EAAE,CAACU,OAAH,CAAa,SAACC,IAAD,CAAU,CACrBrB,OAAO,CAACC,GAAR,CAAYoB,IAAZ,EACA,GAAIA,IAAI,GAAK,MAAb,CAAqB,CACnBX,EAAE,CAACS,IAAH,CAAQ,MAAR,EACD,CAFD,IAEO,CACLT,EAAE,CAACS,IAAH,CAAQ,MAAR,EACD,CACF,CAPD,CASAT,EAAE,CAACY,aAAH,CAAmB,UAAM,CACvBtB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAS,EAAE,CAAG,IAAL,CACD,CAHD,CAID,CA7CQ,CA6CN,EA7CM,CAAT,CA8CA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,8BAAQ,SAAS,CAAC,YAAlB,eACE,2BAAK,GAAG,CAAEa,IAAV,CAAgB,SAAS,CAAC,UAA1B,CAAqC,GAAG,CAAC,MAAzC,EADF,cAEE,kDACO,6CADP,wBAFF,cAKE,yBACE,SAAS,CAAC,UADZ,CAEE,IAAI,CAAC,qBAFP,CAGE,MAAM,CAAC,QAHT,CAIE,GAAG,CAAC,qBAJN,gBALF,CADF,CADF,CAkBD,CAED,cAAexB,CAAAA,GAAf","sourcesContent":["import {useEffect} from 'react';\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n// var celestiump2p = require('celestiump2p');\nimport * as celestiumClient from 'celestiump2p';\nimport { io } from 'socket.io-client';\n\nconst js = import(\"../node_modules/rusty-web/rusty_web.js\");\n\nfunction App() {\n  console.log(wallet);\n  useEffect(() => {\n    let state = {\n      meta_data: {\n        block_chain_len: 0,\n      },\n      block_chain: null,\n    };\n    \n    celestiumClient.RTCPeerConnection = RTCPeerConnection;\n    celestiumClient.RTCSessionDescription = RTCSessionDescription;\n    celestiumClient.RTCIceCandidate = RTCIceCandidate;\n    celestiumClient.io = io;\n    \n    let c1 = celestiumClient.initNewClient();\n    c1.gotConnection = () => {\n      c1.sendOffer(state.meta_data);\n    };\n    c1.gotOffer = (other_meta_data) => {\n      console.log(\"recived meta data on offer\", other_meta_data);\n      return state.meta_data;\n    };\n    c1.gotAnswer = (other_meta_data) => {\n      console.log(\"recived meta data on answer\", other_meta_data);\n      return state.meta_data;\n    };\n    c1.gotCandidate = (other_meta_data) => {\n      console.log(\"recived meta data on candidate\", other_meta_data);\n      return state.meta_data;\n    };\n    c1.gotDataChannel = () => {\n      c1.send(\"ping\");\n    };\n    c1.gotData = (data) => {\n      console.log(data);\n      if (data === \"ping\") {\n        c1.send(\"pong\");\n      } else {\n        c1.send(\"ping\");\n      }\n    };\n    \n    c1.channelClosed = () => {\n      console.log(\"channel closed\");\n      c1 = null;\n    }\n  }, []);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}