{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/zander/Projects/artificialMind/celestium/celestium-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport * as p2pClientLib from \"celestium-p2p\";\nimport * as client from \"celestium-client-logic\";\nimport { io } from \"socket.io-client\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    p2pClient.RTCSessionDescription = RTCSessionDescription;\n    p2pClient.RTCIceCandidate = RTCIceCandidate;\n    p2pClient.RTCPeerConnection = RTCPeerConnection;\n    client.p2pClientLib = p2pClientLib;\n    console.log(client);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/zander/Projects/artificialMind/celestium/celestium-frontend/src/App.js"],"names":["React","useEffect","p2pClientLib","client","io","App","p2pClient","RTCSessionDescription","RTCIceCandidate","RTCPeerConnection","console","log","logo"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,OAAO,WAAP;AACA,OAAO,KAAKC,YAAZ,MAA8B,eAA9B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,CAACC,qBAAV,GAAkCA,qBAAlC;AACAD,IAAAA,SAAS,CAACE,eAAV,GAA4BA,eAA5B;AACAF,IAAAA,SAAS,CAACG,iBAAV,GAA8BA,iBAA9B;AACAN,IAAAA,MAAM,CAACD,YAAP,GAAsBA,YAAtB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACD,GANQ,EAMN,EANM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAES,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA1BQP,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport * as p2pClientLib from \"celestium-p2p\";\nimport * as client from \"celestium-client-logic\";\nimport { io } from \"socket.io-client\";\n\nfunction App() {\n  useEffect(() => {\n    p2pClient.RTCSessionDescription = RTCSessionDescription\n    p2pClient.RTCIceCandidate = RTCIceCandidate\n    p2pClient.RTCPeerConnection = RTCPeerConnection\n    client.p2pClientLib = p2pClientLib\n    console.log(client);\n  }, [])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}